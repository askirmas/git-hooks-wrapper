#!/bin/bash

# TODO: Recursive for submodules?

MY_DIR=$(dirname "$(realpath "$0")")
HOOKS_DIR=$(cat $MY_DIR/hooks_dir)
HOOK="$HOOKS_DIR/pre-commit"

test -e $HOOK
if [ $? -ne 0 ]
then
 echo -e "\033[31mNo pre-commit hook '$HOOK'- skipped\033[0m";
 exit 0;
fi

echo -e "\033[1;33m<pre-commit> \033[0m$HOOK" 

STATUS=$(git status -s)
STASH_NAME="pre-commit.$(date +%F.%T)"
[ "$STATUS" == "" ] || "$MY_DIR/../scripts/stash_untracked.sh" "$STASH_NAME"
STASH_TITLE="On $($MY_DIR/../scripts/getbranch.sh): ${STASH_NAME}"

_unstash() {
    [ "$STATUS" == "" ] && return
    STASH_LAST=$(git stash list -1 --pretty=%B)

    if [ "$STASH_LAST" = "$STASH_TITLE" ]
    then
        # NB -q makes things crazy
        git stash pop > /dev/null
    else
        echo -e "\033[31mLast stash is not mine!\033[0m"
        echo "$STASH_LAST\n$STASH_TITLE"
    fi
}

trap _unstash TERM
trap _unstash KILL
trap _unstash INT

$HOOK>&1
RESULT=$?

_unstash
if [ $RESULT != 0 ]
then
    echo -e "Failed \033[1;41m</pre-commit> \033[0m" 
else
    echo -e "Passed \033[1;32m</pre-commit>\033[0m" 
fi
exit $RESULT
