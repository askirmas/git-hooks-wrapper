#!/bin/bash

MY_DIR=$(dirname "$(realpath "$0")")
HOOKS_DIR=$(cat $MY_DIR/hooks_dir)
HOOK="$HOOKS_DIR/pre-commit"

test -e $HOOK
if [ $? -ne 0 ]
then
 echo "No pre-commit hook '$HOOK'- skipped";
 exit 0;
fi

echo -e "\033[1;33m<pre-commit> \033[0m$HOOK" 
STASH_NAME="pre-commit.$(date +%F.%T)"
# TODO: Recursive for submodules?
git stash push -q --keep-index --include-untracked -m $STASH_NAME;
STASH_TITLE="On $(git rev-parse --abbrev-ref HEAD): ${STASH_NAME}"

# git clean -f ? issue#2

_unstash() {
    STASH_LAST=$(git stash list -1 --pretty=%B)

    if [ "$STASH_LAST" = "$STASH_TITLE" ]
    then
        # TODO: Deleted files afterwards are somehow in index as untracked
        git stash pop > /dev/null
    else
        echo -e "\033[31mLast stash is not mine!\033[0m"
    fi
}

trap _unstash TERM
trap _unstash KILL
trap _unstash INT

RETURN=$($HOOK)
RESULT="$?"

# During tests updated snapshots can be produced and track it in your pre-commit hook with something like
# git add -n? -f? --all 
_unstash
if [ $RESULT != 0 ]
then
    echo -e "$RETURN\nFailed \033[1;41m</pre-commit> \033[0m" 
else
    echo -e "Passed \033[1;32m</pre-commit>\033[0m" 
fi
exit $RESULT
